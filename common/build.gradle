architectury {
	common(rootProject.enabled_platforms.split(","))
}

loom {
	accessWidenerPath = file("src/main/resources/handles.accesswidener")
}

dependencies {
	// We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
	// Do NOT use other classes from fabric loader
	modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
	// Remove the next line if you don't want to depend on the API
	modApi "dev.architectury:architectury:${rootProject.architectury_version}"
	modCompileOnlyApi "net.minecraftforge:forgeconfigapiport-fabric:${rootProject.forge_config_api_port_version}"

	//Yes, it is weird that we implement these fabric mods in _common_
	//Just means we have to be careful not to access non-common stuff when in the Handles common module
	modImplementation "com.github.cc-tweaked:cc-restitched:${project.ccr_version}"
	modImplementation "maven.modrinth:tardis-refined:${tardis_refined_id}-fabric"

	//modCompileOnlyApi ("blank:imm_ptl_core:2.3.1")
	//modCompileOnlyApi ("blank:immersive-portals:2.3.2-mc1.19.2-fabric")
	//modCompileOnlyApi ("blank:q_misc_util:2.3.1")
}

publishing {
	publications {
		mavenCommon(MavenPublication) {
			artifactId = rootProject.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
	}
}
